grammar Json5 {}

entry union Value {
    | Object  #Object
    | Array   #Array
    | String  #String
    | Number  #Number
    | Boolean #Boolean
    | Null    #Null
}

class Object {
    '{' (ObjectPair (',' ObjectPair)* ',')? '}'
}

union ObjectPair {
    | Identifier ':' Value  #IdentifierKey
    | String ':' Value      #StringKey
}

class Array {
    '[' (item:Value (',' Value)* ',')? ']'
}

atomic union String {
    | "'" StringRaw "'"    #SingleQuote
    | "'" StringText* "'"  #DoubleQuote
}

class StringRaw -> StringText {
/[^"]*/
}

union StringText {
| '\' ANY #Escape
    | /[^"]+/ #Character
}

atomic class Number {
    /[+-]?(0|[1-9][0-9]*)/
}

union Boolean {
    | "true"  #True
    | "false" #False
}

class Null {
    "null"
}

class Identifier {
    /[_\p{XID_start}][\p{XID_continue}]*/
}

atomic ignore class WhiteSpace {
    [\p{WhiteSpace}]
}